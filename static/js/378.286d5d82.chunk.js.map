{"version":3,"file":"static/js/378.286d5d82.chunk.js","mappings":"iOAIaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAYpBC,EAAe,SAAAC,GACLA,EAAEC,cACGC,QAAQ,QACtBC,UAAUC,OAAO,QACvB,EAMD,OAJIR,GACFS,MAAMT,IAIN,kBAAMU,SArBa,SAAAN,GACnBA,EAAEO,iBACF,IAAMC,EAAOR,EAAEC,cAITQ,EAAU,CAAEC,KAHLF,EAAKG,SAASD,KAAKE,MAGRC,MAFVL,EAAKG,SAASE,MAAMD,MAEHE,SADdN,EAAKG,SAASG,SAASF,OAExClB,GAASqB,EAAAA,EAAAA,IAASN,GACnB,EAa+BO,UAAYpB,EAAQ,QAAU,GAA5D,WACE,yCAEE,kBACEqB,KAAK,OACLP,KAAK,OACLQ,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUtB,QAGd,sCAEE,kBACEkB,KAAK,QACLP,KAAK,QACLQ,QAAQ,0CACRE,UAAQ,EACRC,SAAUtB,QAGd,yCAEE,kBACEkB,KAAK,WACLP,KAAK,WACLQ,QAAQ,uCACRC,MAAM,8GACNC,UAAQ,EACRC,SAAUtB,QAGd,mBAAQkB,KAAK,SAAb,wBAGL,E,6BC9DYK,EAAoBC,EAAAA,GAAAA,KAAH,oOAGJC,GCQ1B,EAXiB,WACf,OACE,SAACF,EAAD,WACE,4BACE,2EACA,SAAC7B,EAAD,QAIP,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.js","pages/Register/Register.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { selectErrorAuth } from 'redux/auth/selectors';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectErrorAuth);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n    const newUser = { name, email, password };\n    dispatch(register(newUser));\n  };\n\n  const handleChange = e => {\n    const input = e.currentTarget;\n    const form = input.closest('form');\n    form.classList.remove('error')\n  }\n\n  if (error) {\n    alert(error);\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className= {error ? 'error' : ''}>\n      <label>\n        Username\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\n          title=\"Must contain at least one  number and one uppercase and lowercase letter, and at least 6 or more characters\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Register</button>\n      </form>\n  );\n};\n","import styled from 'styled-components';\nimport img from '../../images/register.jpg';\n\nexport const RegisterPageStyle = styled.main`\n  flex-direction: column;\n  align-items: flex-end;\n  background-image: url(${img});\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n","import { RegisterForm } from 'components/RegisterForm';\nimport { RegisterPageStyle } from './Register.styled';\n\nconst Register = () => {\n  return (\n    <RegisterPageStyle>\n      <div>\n        <h2>To create your own phonebook, please register</h2>\n        <RegisterForm />\n      </div>\n    </RegisterPageStyle>\n  );\n};\n\nexport default Register;\n"],"names":["RegisterForm","dispatch","useDispatch","error","useSelector","selectErrorAuth","handleChange","e","currentTarget","closest","classList","remove","alert","onSubmit","preventDefault","form","newUser","name","elements","value","email","password","register","className","type","pattern","title","required","onChange","RegisterPageStyle","styled","img"],"sourceRoot":""}